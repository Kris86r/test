
                СОБЫТИЯ:                                                      ГРАФИКА:
* Чтобы создать GUI начните с окна. Как прави-              * Обьект события передается в метод обработ-
  ло это JFrame:                                              ки события и несет с собой информацию о со-
  JFrame frame = new JFrame();                                бытии, в том числе его источник.
* Вы можете добавлять виджеты (кнопки, поля                 * Вы можете рисовать двумерную графику пря-
  ввода и т.д.) в JFrame, используя запись вида:              мо на виджете.
  frame.getContentPane().add(button);                       * Вы можете помещать GIF- или JPEG- изобра-
* В отличие от большинства других компонентов,                жения прямо на виджет.
  JFrame не позволяет добавлять в него обьек-               * Чтобы рисовать собственные изображения
  ты напрямую, поэтому приходится делать это                  (включая GIF или JPEG), создайте подкласс
  через панель содержимого, принадлежащую                     JPanel и замените метод paintComponent().
  JFrame.                                                   * Метод paintComponent() вызывается графи-
* Чтобы вывести на экран окно (JFrame), нужно                 ческой системой. Вы никогда не вызываете
  сделать его видимым и указать размер:                       его сами. Аргументом для paintComponent()
  frame.setSize(300, 300);                                    является обьект Graphics, который предо-
  frame.setVisible(true);                                     ставляет поверхность для рисования, разме-
* Для отслеживания событий нужно обозначить                   щаемую на экране. вы не можете сами со-
  свой инстерес к источнику события. Источник                 здать этот обьект.
  события - это обьект(кнопка, переключатель                * Из обьекта Graphics (параметра paintCom-
  и т.д.), который "запускает" событие, основы-               ponent) вызываются следующие типичные
  ваясь на действиях пользователя.                            методы:
* Интерфейс слушателя предоставляет источни-                  graphics.setColor(Color.blue);
  ку события возможность обратного вызова, так                g.fillRect(20, 50, 100, 120);
  как интерфейс определяет метод, вызываемый                * Чтобы создать JPG- изображение, добавьте
  источником события при совершении события.                  обьект Image:
* Чтобы связать события с источником, вызови-                 Image image = new
  те регистрационный метод источника. Методы                  ImageIcon("catzilla.jpg").
  для регистрации всега принимает следующий                   getImage();
  вид: add<ТипСобытия>Listener. Например, для                 и нарисуйте изображение:
  регистрации события ActionEvent, генериру-                  g.drawImage(image, 3, 4, this);
  емого кнопкой вызовите:                                   * Обьект, ссылка на который имеет тип Graphics
  button.addActionListener(this);                             и передается в качестве параметра для ме-
* Создавайте интерфейс слушателя, реализуя                    тода paintComponent(), фактически является
  все методы для обработки событий интерфейса.                экземпляром класса Graphics2D. Этот класс
  Поместите свой код обработки событий в метод                содержит множество методов, включая такие:
  обраного вызова слушателя. Для ActionEvent                  fill3DRect(), draw3DRect(), rotate(),
  это такой метод:                                            scale(), shear(), transform().
  public void actionPerformed(ActionEvent                   * Для вызова методов, предоставляемых обь-
                               event) {                       ектом Graphics2D, нужно перевести тип пара-
       button.setText("you clicked!");                        метра из Graphics в Graphics2D:
   }                                                          Graphics2D g2d = (Graphics2D) g;